{
  "metadata": {
    "schemaVersion": "1.0",
    "importType": "LEX",
    "importFormat": "JSON"
  },
  "resource": {
    "name": "DiningConciergeBot",
    "version": "2",
    "intents": [
      {
        "name": "Greet",
        "version": "2",
        "fulfillmentActivity": {
          "codeHook": {
            "uri": "arn:aws:lambda:us-east-1:307836514159:function:diningConciergeProcessor",
            "messageVersion": "1.0"
          },
          "type": "CodeHook"
        },
        "sampleUtterances": [
          "Hello",
          "How are you",
          "What's up",
          "Hi",
          "Xin chao",
          "Hey there",
          "Hey",
          "Meooo"
        ],
        "slots": []
      },
      {
        "name": "SuggestDining",
        "version": "2",
        "fulfillmentActivity": {
          "codeHook": {
            "uri": "arn:aws:lambda:us-east-1:307836514159:function:diningConciergeProcessor",
            "messageVersion": "1.0"
          },
          "type": "CodeHook"
        },
        "sampleUtterances": [
          "I need some restaurant suggestions.",
          "I don't know what to eat",
          "I am hungry",
          "I want to go to a restaurant",
          "I want to eat out",
          "Where should I go to eat",
          "Which restaurant is good",
          "I want to eat {cuisine} in {location} at {diningTime} with {numPeople} of my friends"
        ],
        "slots": [
          {
            "sampleUtterances": [],
            "slotType": "cuisine",
            "slotTypeVersion": "1",
            "slotConstraint": "Required",
            "valueElicitationPrompt": {
              "messages": [
                {
                  "contentType": "PlainText",
                  "content": "What cuisine would you like to try?"
                }
              ],
              "maxAttempts": 2
            },
            "priority": 2,
            "name": "cuisine"
          },
          {
            "sampleUtterances": [],
            "slotType": "diningTime",
            "slotTypeVersion": "1",
            "slotConstraint": "Required",
            "valueElicitationPrompt": {
              "messages": [
                {
                  "contentType": "PlainText",
                  "content": "What time?"
                }
              ],
              "maxAttempts": 2
            },
            "priority": 3,
            "name": "diningTime"
          },
          {
            "sampleUtterances": [],
            "slotType": "location",
            "slotTypeVersion": "1",
            "slotConstraint": "Required",
            "valueElicitationPrompt": {
              "messages": [
                {
                  "contentType": "PlainText",
                  "content": "What city or city area?"
                }
              ],
              "maxAttempts": 2
            },
            "priority": 1,
            "name": "location"
          },
          {
            "sampleUtterances": [],
            "slotType": "numPeople",
            "slotTypeVersion": "1",
            "slotConstraint": "Required",
            "valueElicitationPrompt": {
              "messages": [
                {
                  "contentType": "PlainText",
                  "content": "How many people are in your party?"
                }
              ],
              "maxAttempts": 2
            },
            "priority": 4,
            "name": "numPeople"
          }
        ],
        "dialogCodeHook": {
          "uri": "arn:aws:lambda:us-east-1:307836514159:function:diningConciergeProcessor",
          "messageVersion": "1.0"
        }
      }
    ],
    "slotTypes": [
      {
        "description": "type of food",
        "name": "cuisine",
        "version": "1",
        "enumerationValues": [
          {
            "value": "Mediterranean",
            "synonyms": []
          },
          {
            "value": "Italian",
            "synonyms": []
          },
          {
            "value": "French",
            "synonyms": []
          },
          {
            "value": "American",
            "synonyms": []
          },
          {
            "value": "Vietnamese",
            "synonyms": []
          },
          {
            "value": "Chinese",
            "synonyms": []
          },
          {
            "value": "Korean",
            "synonyms": []
          },
          {
            "value": "Indian",
            "synonyms": []
          }
        ],
        "valueSelectionStrategy": "ORIGINAL_VALUE"
      },
      {
        "description": "Location of restaurant",
        "name": "location",
        "version": "1",
        "enumerationValues": [
          {
            "value": "NYC",
            "synonyms": []
          },
          {
            "value": "Manhattan",
            "synonyms": []
          },
          {
            "value": "Brooklyn",
            "synonyms": []
          },
          {
            "value": "NY",
            "synonyms": []
          }
        ],
        "valueSelectionStrategy": "ORIGINAL_VALUE"
      },
      {
        "description": "Number of people",
        "name": "numPeople",
        "version": "1",
        "enumerationValues": [
          {
            "value": "1",
            "synonyms": [
              "1",
              "one"
            ]
          },
          {
            "value": "2",
            "synonyms": [
              "two",
              "2 people"
            ]
          }
        ],
        "valueSelectionStrategy": "TOP_RESOLUTION"
      },
      {
        "description": "Dining time",
        "name": "diningTime",
        "version": "1",
        "enumerationValues": [
          {
            "value": "6 PM",
            "synonyms": [
              "6",
              "6 pm",
              "18:00"
            ]
          }
        ],
        "valueSelectionStrategy": "TOP_RESOLUTION"
      }
    ],
    "voiceId": "Salli",
    "childDirected": false,
    "locale": "en-US",
    "idleSessionTTLInSeconds": 300,
    "clarificationPrompt": {
      "messages": [
        {
          "contentType": "PlainText",
          "content": "Sorry, can you please repeat that?"
        }
      ],
      "maxAttempts": 5
    },
    "abortStatement": {
      "messages": [
        {
          "contentType": "PlainText",
          "content": "Sorry, I could not understand. Goodbye."
        }
      ]
    }
  }
}